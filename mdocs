#!/bin/bash
# -----------------
# functions for running mkdocs
# depends on bin/github script
# ------------------

set -e
# source "$(dirname $0)/github.sh"
binDir=$(dirname $0)
#echo "binDir $binDir"

MK_IMAGE=yakworks/alpine-java:jdk8-builder

function serve {
  readme_copy
  mkdocs serve --dev-addr 0.0.0.0:8000
}

# Copies readme and fixs links that went into docs
function readme_copy {
  rm -f docs/oci-engine.md
  cp README.md docs/oci-engine.md
  # replace the (docs/ text in links as they are in same dir now, ex [foo](docs/bar.md) will become [foo](bar.md)
  sed -Ei 's/\(\s*docs\//\(/g' docs/oci-engine.md
}

# build using docker, use for local, not for CI.
function build {
  readme_copy
  mkdocs build --site-dir build/site
}

# checks out and then publishes to gh-pages.
# expects that build was already run and sites exits in build
function publish {
  $binDir/github clone-gh-pages
  cp -r build/site/. build/gh-pages
  $binDir/github push-gh-pages
}

# custom circle publishing
# assumes working dir is this projects root
# expects the COMMIT_RANGE to be passe in as an $1 argument
# FIXME why won't this work?
# spits out Exited with code 1 on circle with no indicator, THIS WAS WORKING
function circle-publish_FAILS_ {
  #circle fills in the COMMIT_RANGE,
  # can test this by setting COMMIT_RANGE
  diffCmd="git diff $1 --name-status | grep -E \"(README\.md|mkdocs\.yml|docs/)\""
  echo "running $diffCmd"
  # needs eval or we get fatal: ambiguous argument '|' ...
  hasChanges=$( eval $diffCmd )
  echo "hasChanges $hasChanges"
  if [ "$hasChanges" ]; then
    echo "docs have changes"
    # config github bot user
    $binDir/github config-bot-user
    build
    publish
  else
    echo "docs not modified; no need to publish"
  fi
}

function docker_serve {
  docker run --rm --name=mkdocs-serve \
  -v $(pwd):/project \
  -p 8000:8000 \
  $MK_IMAGE mkdocs serve --dev-addr 0.0.0.0:8000
}

# --- boiler plate function runner, keep at end of file ------
# BASH_SOURCE check will be true if this is run, false if imported into another script with `source`
if [[ "${#BASH_SOURCE[@]}" == 1 ]]; then
  source "$(dirname $0)/function_runner.sh"
fi
