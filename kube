#!/usr/bin/env bash
# -----------------
# functions to help with kubernetes
# ------------------
set -e

# used for circleCI to setup the kube/config to talk to rancher
# ex: kube $K8_SERVER $K8_USER $K8_TOKEN 9ci-dev
# arg $1 - server
# arg $2 - user name
# arg $3 - token
# arg $4 - cluster name, will also be context name.
function config {
  kubectl config set-cluster $4 --server=$1
  kubectl config set-credentials $2 --token=$3
  kubectl config set-context $4 --user=$2 --cluster=$4
  kubectl config use-context $4
}

# creates namespace if it does not exist
function createNamespace {
  if [ ! "$(kubectl get ns | grep $1)" ]; then
    kubectl create namespace "$1"
  fi
}

# runs kubectl apply on the passed in string
function apply {
  echo "$1" | kubectl apply -f -
}

# runs kubectl delete deployment,svc,configmap,ingress for the passed in selector
# arg $1 - the selector ex: "app=foo"
# arg $2 - the namespace, default if not specified
function clean {
  ns=${2:-default}
  kubectl delete deployment,svc,configmap,ingress --selector="$1" --namespace="$ns"
}

# --- boiler plate function runner, keep at end of file ------
# BASH_SOURCE check will be true if this is run, false if imported into another script with `source`
if [[ "${#BASH_SOURCE[@]}" == 1 ]]; then
  source "$(dirname $0)/function_runner.sh"
fi
